#!/bin/bash

# Usage: discogs_exportcollection

# Export your own or any public collection and wantlist including custom fields and folders

# If you want to export YOUR collection you need a user-token to download all the data
# From any other user-collection you can export:
# Only the items in folder0 = folder with all items in collection
# Only custom fields which are set to public
# Items in wantlist

# Copyright (C) 2017 Thomas Gollmer, th_goso@freenet.de
# Dieses Programm ist freie Software. Sie können es unter den Bedingungen der GNU General Public License,
# wie von der Free Software Foundation veröffentlicht, weitergeben und/oder modifizieren,
# entweder gemäß Version 3 der Lizenz oder (nach Ihrer Option) jeder späteren Version.
# Die Veröffentlichung dieses Programms erfolgt in der Hoffnung, daß es Ihnen von Nutzen sein wird,
# aber OHNE IRGENDEINE GARANTIE, sogar ohne die implizite Garantie der
# MARKTREIFE oder der VERWENDBARKEIT FÜR EINEN BESTIMMTEN ZWECK.
# Details finden Sie in der GNU General Public License. Sie sollten ein Exemplar der GNU General Public License
# zusammen mit diesem Programm erhalten haben. Falls nicht, siehe <http://www.gnu.org/licenses/>.

# ------------------------------------------------------------------------------------------------------------------
# Load userdata and save in file named "userdata.json" in tempfolder
# Show Info or exit on error
function load_userdata {
  if [ -n "$g_usertoken" ] ; then
    local data=$(curl --stderr /dev/null -A "$g_agent" "$g_page/users/$g_username" \
      -H "Authorization: Discogs token=$g_usertoken")
  else
    local data=$(curl --stderr /dev/null -A "$g_agent" "$g_page/users/$g_username")
  fi

  g_username=$(echo "$data" | jq -r '.username')
  local numcoll=$(echo "$data" | jq -r '.num_collection')

  if [ "$g_username" = "null" ] ; then
    echo "User does not exists !" >&2
    rm -f -r -d "$g_tempfolder"
    exit 1
  fi

  if [ "$numcoll" = "null" ] ; then
    echo "Empty or private collection !" >&2
    rm -f -r -d "$g_tempfolder"
    exit 1
  fi

  if [ "$numcoll" = "0" ] ; then
    echo "Empty or private collection !" >&2
    rm -f -r -d "$g_tempfolder"
    exit 1
  fi

  echo "$g_username has $numcoll items"
  echo "$data" > "${g_tempfolder}/userdata.json"

  sleep "$g_sleeptime"
}
# ------------------------------------------------------------------------------------------------------------------
# Load folder-infos and save in file named "folderdata.json" in tempfolder
# Show Info
function load_folderdata {
  if [ -n "$g_usertoken" ] ; then
    local data=$(curl --stderr /dev/null -A "$g_agent" "$g_page/users/$g_username/collection/folders" \
      -H "Authorization: Discogs token=$g_usertoken")
  else
    # in public collection we can only read folder0 = ALL-FOLDER and no other
    local data=$(curl --stderr /dev/null -A "$g_agent" "$g_page/users/$g_username/collection/folders")
  fi

  local folders=$(echo "$data" | jq -r '.folders | length')
  echo "in $folders folders"
  echo "$data" > "${g_tempfolder}/folderdata.json"

  sleep "$g_sleeptime"
}
# ------------------------------------------------------------------------------------------------------------------
# Load fields-infos and save in file named "fieldsdata.json" in tempfolder
# Show Info
function load_fieldsdata {
  if [ -n "$g_usertoken" ] ; then
    local data=$(curl --stderr /dev/null -A "$g_agent" "$g_page/users/$g_username/collection/fields" \
      -H "Authorization: Discogs token=$g_usertoken")
  else
    local data=$(curl --stderr /dev/null -A "$g_agent" "$g_page/users/$g_username/collection/fields")
  fi

  local fields=$(echo "$data" | jq -r '.fields | length')
  echo "with $fields custom-fields"
  echo "$data" > "${g_tempfolder}/fieldsdata.json"

  sleep "$g_sleeptime"
}
# ------------------------------------------------------------------------------------------------------------------
# Load collection-files and save in files named "collectionfolder_X_page_Y.json"
# in tempfolder; X = folder-number Y = page-number
# Show Info
function load_collection {
  local data=""
  local curfolder=""
  local pagecnt=""
  local curpage=""
  local numpages=""
  local folderids=($(cat "${g_tempfolder}/folderdata.json" | jq '.folders[].id'))

  for curfolder in "${folderids[@]}" ; do
    pagecnt="1"
    curpage="$g_page/users/$g_username/collection/folders/${curfolder}/releases?per_page=100&page=1"

    until [ "$curpage" = "null" ] ; do
      if [ -n "$g_usertoken" ] ; then
        data=$(curl --stderr /dev/null -A "$g_agent" "$curpage" -H "Authorization: Discogs token=$g_usertoken")
      else
        data=$(curl --stderr /dev/null -A "$g_agent" "$curpage")
      fi

      numpages=$(echo "$data" | jq -r '.pagination.pages')
      echo "Load collection folder ${curfolder} page ${pagecnt}/${numpages}"

      echo "$data" > "${g_tempfolder}/collectionfolder_${curfolder}_page_${pagecnt}.json"
      ((pagecnt++))
      curpage=$(echo "$data" | jq -r '.pagination.urls.next')
      sleep "$g_sleeptime"
    done
  done
}
# ------------------------------------------------------------------------------------------------------------------
# Load wantlist-files and save in files named "wantlist_X.json" in tempfolder (X = 1....)
# Show Info
function load_wantlist {
  local data=""
  local numpages=""
  local pagecnt="1"
  local curpage="$g_page/users/$g_username/wants?per_page=100&page=1"

  until [ "$curpage" = "null" ] ; do
    if [ -n "$g_usertoken" ] ; then
      data=$(curl --stderr /dev/null -A "$g_agent" "$curpage" -H "Authorization: Discogs token=$g_usertoken")
    else
      data=$(curl --stderr /dev/null -A "$g_agent" "$curpage")
    fi

    numpages=$(echo "$data" | jq -r '.pagination.pages')
    echo "Load wantlist page ${pagecnt}/${numpages}"

    echo "$data" > "${g_tempfolder}/wantlist_${pagecnt}.json"
    ((pagecnt++))
    curpage=$(echo "$data" | jq -r '.pagination.urls.next')
    sleep "$g_sleeptime"
  done
}
# ------------------------------------------------------------------------------------------------------------------
# Main

# global Variables
g_agent="github.com/thgoso/discogs-loader/"
g_page="https://api.discogs.com"
g_tempfolder="/tmp/discogsexport"
g_username=""
g_usertoken=""
g_sleeptime=0

# Create tempfolder
rm -f -r -d "$g_tempfolder"
mkdir "$g_tempfolder"
# Let the user enter user-name, user-token and save data in "$g_username" & "$g_usertoken"
# set sleeptime 1 or 3 seconds
# with usertoken you can make 60 server requests per minute, without only 25
echo "--------------------------- DISCOGS EXPORT ----------------------------"
echo "Enter user-name and user-token if you are the owner of the collection."
echo "You can also read data from other users, if the collection is public."
echo "In this case only enter the user-name and press <ENTER> for user-token."
read -p "user-name: " g_username
read -p "user-token: " g_usertoken

if [ -z "$g_usertoken" ] ; then
  g_sleeptime="3"
else
  g_sleeptime="1"
fi
# load discogs-data save in tempfolder
load_userdata
load_folderdata
load_fieldsdata
load_collection
load_wantlist
# Create TAR-GZ from all the *.json files in temp-folder
# Save in HOME folder
now_date=$(date +%d.%m.%Y-%H:%M:%S)
tar_file="${HOME}/Discogsexport_${g_username}_${now_date}.tar.gz"
cd "$g_tempfolder"
tar -czf "tmp.tar.gz" *.json
mv "${g_tempfolder}/tmp.tar.gz" "$tar_file"
echo "Created archive in: $tar_file"
rm -f -r -d "$g_tempfolder"

exit 0
